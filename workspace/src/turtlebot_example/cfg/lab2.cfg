#!/usr/bin/env python
PACKAGE='turtlebot_example'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
import math

gen = ParameterGenerator()
#       Name                    Type      Reconfiguration level
#       Description
#       Default  Min  Max
gen.add("nParticles", int_t, 0,
        "nParticles.",
         100, 1, 10000)
gen.add("posPriorRange", double_t, 0,
        "posPriorRange.",
         1, 0, 10)
gen.add("thetaPriorRange", double_t, 0,
        "thetaPriorRange.",
         1, 0, math.pi)
gen.add("maxMeasRange", double_t, 0,
        "Maximum range of measurement to accept for mapping.",
         9, 0, 50)
gen.add("maxMeasTheta", double_t, 0,
        "Maximum angle of measurement to accept for mapping.",
         math.pi / 4., 0, math.pi / 2.)
gen.add("mapGridSize", double_t, 0,
        "The size of a square of a map grid in meters.",
         1e-2, 1e-6, 1e1)
gen.add("mapSize", double_t, 0,
        "The size of the map in meters.",
         20, 1, 50)
gen.add("emptySpaceProbModifier", double_t, 0,
        "The probability that a space is occupied given that there was no measured object there.",
         0.4, 0, 0.5)
gen.add("notEmptySpaceProbModifier", double_t, 0,
        "The probability that a space is occupied given that there was a measured object there.",
         0.6, 0.5, 1.0)

gen.add("mapBeta", int_t, 0,
        "How many grid cells to consider as part of the object in a trace.",
         5, 1, 100)


exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "lab2"))
